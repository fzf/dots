if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

call plug#begin('~/.local/share/nvim/plugged')

Plug 'autozimu/LanguageClient-neovim', {'branch': 'next', 'do': 'bash install.sh'}

Plug 'ap/vim-buftabline'
Plug 'chriskempson/tomorrow-theme', { 'rtp': 'vim' }
Plug 'chriskempson/vim-tomorrow-theme'
Plug 'christoomey/vim-tmux-navigator'
Plug 'dyng/ctrlsf.vim'
Plug 'eugen0329/vim-esearch'
Plug 'iberianpig/tig-explorer.vim'
Plug 'itchyny/lightline.vim'
Plug 'ivalkeen/nerdtree-execute'
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
Plug 'junegunn/fzf.vim'
Plug 'neoclide/coc.nvim', {'branch': 'release'}
Plug 'ntpeters/vim-better-whitespace'
Plug 'qpkorr/vim-bufkill'
Plug 'rbgrouleff/bclose.vim'
Plug 'scrooloose/nerdcommenter'
Plug 'shumphrey/fugitive-gitlab.vim'
Plug 'takkii/Bignyanco'
Plug 'thoughtbot/vim-rspec'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-rhubarb'
Plug 'vim-ruby/vim-ruby'
Plug 'wakatime/vim-wakatime'
Plug 'wsdjeg/vim-fetch'

call plug#end()

set hidden

let mapleader = ","
let g:coc_global_extensions = [
  \ 'coc-explorer',
  \ 'coc-git',
  \ 'coc-highlight',
  \ 'coc-json',
  \ 'coc-lists',
  \ 'coc-solargraph'
\]

autocmd BufLeave,FocusLost,VimResized * silent! wall

no d h
no D H
no h j
no H J
no t k
no T K
no n l
no N L

no j d
no J D
no k t
no K T
no l n
no L N

nnoremap <leader>n :bnext<CR>
nnoremap <leader>d :bprev<CR>
nnoremap <C-w>v <C-w>s
nnoremap <C-w>s <C-w>v

let g:tmux_navigator_no_mappings = 1
let g:tmux_navigator_save_on_switch = 1
let g:tmux_navigator_disable_when_zoomed = 1

nnoremap <silent> <C-d> :TmuxNavigateLeft<cr>
nnoremap <silent> <C-h> :TmuxNavigateDown<cr>
nnoremap <silent> <C-t> :TmuxNavigateUp<cr>
nnoremap <silent> <C-n> :TmuxNavigateRight<cr>
nnoremap <silent> <C-\> :TmuxNavigatePrevious<cr>

colorscheme Tomorrow-Night-Eighties

let NERDTreeMapOpenInTab='\t'
let g:better_whitespace_enabled=1
let g:strip_whitespace_on_save=1

syntax enable
syntax on
filetype plugin indent on

set autoread
set clipboard=unnamed
set encoding=utf-8
set expandtab
set foldmethod=indent
set mouse=a
set nocompatible
set nohlsearch
set noswapfile
set number
set showcmd
set tabstop=2 shiftwidth=2
set listchars+=space:‚ê£
set list

" Keep all folds open when a file is opened
augroup OpenAllFoldsOnFileOpen
    autocmd!
    autocmd BufRead * normal zR
augroup END

if executable('ag')
  let g:ackprg = 'ag --vimgrep'
endif
map <C-_> :Ag<CR>
map <C-P> :CocList files<CR>
map <C-x> :!pbcopy<CR>
map <C-c> :w !pbcopy<CR><CR>
map <leader>x :BD<CR>

let g:esearch = {
  \ 'out': 'qflist' }

function! CocCurrentFunction()
    return get(b:, 'coc_current_function', '')
endfunction

let g:lightline = {
\ 'colorscheme': 'wombat',
\ 'active': {
\   'left': [ [ 'mode', 'paste' ],
\             [ 'cocstatus', 'currentfunction', 'readonly', 'filename', 'modified' ] ]
\ },
\ 'component_function': {
\   'cocstatus': 'coc#status',
\   'currentfunction': 'CocCurrentFunction'
\ },
\}

" use <tab> for trigger completion and navigate to the next complete item
function! s:check_back_space() abort
  let col = col('.') - 1
  return !col || getline('.')[col - 1]  =~ '\s'
endfunction

inoremap <silent><expr> <Tab>
\ pumvisible() ? "\<C-n>" :
\ <SID>check_back_space() ? "\<Tab>" :
\ coc#refresh()
