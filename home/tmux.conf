# set zsh as your default shell
set-option -g default-shell /bin/zsh
# Ring the bell if any background window rang a bell
set -g bell-action any

# Default termtype. If the rcfile sets $TERM, that overrides this value.
set -g default-terminal screen-256color

# Create splits and vertical splits
bind-key s split-window -h
bind-key w split-window

# Pane resize in all four directions using vi bindings.
# Can use these raw but I map them to shift-ctrl-<h,j,k,l> in iTerm.
bind-key t select-pane -U
bind-key h select-pane -D
bind-key d select-pane -L
bind-key n select-pane -R
bind-key T resize-pane -U
bind-key H resize-pane -D
bind-key D resize-pane -L
bind-key N resize-pane -R
bind-key -r T resize-pane -U 5
bind-key -r H resize-pane -D 5
bind-key -r D resize-pane -L 5
bind-key -r N resize-pane -R 5

is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-d if-shell "$is_vim" "send-keys C-d"  "select-pane -L"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -D"
bind-key -n C-t if-shell "$is_vim" "send-keys C-t"  "select-pane -U"
bind-key -n C-n if-shell "$is_vim" "send-keys C-n"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-d select-pane -L
bind-key -T copy-mode-vi C-h select-pane -D
bind-key -T copy-mode-vi C-t select-pane -U
bind-key -T copy-mode-vi C-n select-pane -R
bind-key -T copy-mode-vi C-\ select-pane -l
# Use vi keybindings for tmux commandline input.
# Note that to get command mode you need to hit ESC twice...
set -g status-keys vi

# Use vi keybindings in copy and choice modes
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
# bind-key -t vi-copy v begin-selection
# bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# # Update default binding of `Enter` to also use copy-pipe
# unbind -t vi-copy Enter
# bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

unbind-key -T copy-mode-vi j
unbind-key -T copy-mode-vi x
unbind-key -T copy-mode-vi l
unbind-key -T copy-mode-vi h
bind-key -T copy-mode-vi h send-keys -X cursor-down
bind-key -T copy-mode-vi t send-keys -X cursor-up
bind-key -T copy-mode-vi n send-keys -X cursor-right
bind-key -T copy-mode-vi d send-keys -X cursor-left
bind-key -T prefix v copy-mode
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi y send -X copy-selection-and-cancel
bind-key -T copy-mode-vi L send-keys -X search-reverse
bind-key -T copy-mode-vi l send-keys -X search-again

# set first window to index 1 (not 0) to map more to the keyboard layout...
set-option -g base-index 1
set-window-option -g pane-base-index 1

# color scheme (styled as vim-powerline)
set -g focus-events on
set -g status-left-length 52
set -g status-right-length 451
set -g status-fg white
set -g status-bg colour234
set -g status-left '#[fg=colour235,bg=colour252,bold] ❐ #S #[fg=colour252,bg=colour238,nobold]#[fg=colour245,bg=colour238,bold] #(whoami) #[fg=colour238,bg=colour234,nobold]'
set -g window-status-format "#[fg=colour235,bg=colour252,bold] #I #W "
set -g window-status-current-format "#[fg=colour234,bg=colour39]#[fg=black,bg=colour39,noreverse,bold] #I: #W #[fg=colour39,bg=colour234,nobold]"
set -g status-position top

# Patch for OS X pbpaste and pbcopy under tmux.
set-option -g default-command "which reattach-to-user-namespace > /dev/null && reattach-to-user-namespace -l $SHELL || $SHELL"

# Screen like binding
unbind C-b
set -g prefix Escape
bind Escape send-prefix

# No escape time for vi mode
set -sg escape-time 0

# Screen like binding for last window
bind C-a last-window

# Bigger history
set -g history-limit 20000

bind-key C-s choose-session
bind-key x kill-pane
bind-key -n C-k send-keys -R \; clear-history

set -g mouse on
set-option -g status-interval 1
set-option -g automatic-rename on
set-option -g automatic-rename-format '#{b:pane_current_path}'
# mouse stuff
# set -g mode-mouse on
# set -g mouse-resize-pane on
# set -g mouse-select-pane on
# set -g mouse-select-window on
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @continuum-boot-options 'iterm'
set -g @continuum-restore 'on'

set -g @plugin 'christoomey/vim-tmux-navigator'
run -b '~/.tmux/plugins/tpm/tpm'

source "~/Library/Python/3.7/lib/python/site-packages/powerline/bindings/tmux/powerline.conf"
