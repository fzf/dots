;; edn spec https://github.com/edn-format/edn
;; https://github.com/JoshuaManuel/Karabiner-Elements-Key-List
{
  :profiles {
    :Default {
      :default true
      :sim 500
      :delay 500
      :alone 1000
      :held 500
    }
  }

  ;; osascript -e 'id of app "Application Name"'
  :applications {
    :arc ["company\\.thebrowser\\.Browser$"]
    :chrome ["com\\.google\\.Chrome"]
    :messages ["com\\.apple\\.MobileSMS"]
    :notion ["notion\\.id"]
    :sigmaos ["com\\.sigmaos\\.sigmaos\\.macos"]
    :slack ["com\\.tinyspeck\\.slackmacgap"]
    :telegram ["ru\\.keepcoder\\.Telegram"]
    :vivaldi ["com\\.vivaldi\\.Vivaldi"]
    :vscode ["com\\.microsoft\\.VSCode"]
    :zoom ["us\\.zoom\\.xos"]
  }

  :modifiers {
    :command_option [:left_command :left_option]
    :command_option_control [:left_command :left_option :left_control]
    :command_shift [:left_command :left_shift]
    :control_shift [:left_control :left_shift]
  }

  :froms {
    ;; command + option + control + d
    :drawer_left { :key :h :modi :command_option_control }
    ;; command + h
    :history_back { :key :j :modi :left_command }
    ;; command + t
    :history_forward { :key :k :modi :left_command }
    ;; command + p
    :open { :key :r :modi :left_command }
    ;; command + shift + u
    :open_undo { :key :f :modi :command_shift }
    ;; command + shift + s
    :split { :key :semicolon :modi :command_shift }
    ;; command + shift + d
    :split_back { :key :h :modi :command_shift }
    ;; command + shift + n
    :split_forward { :key :l :modi :command_shift }
    ;; command + shift + w
    :split_close { :key :comma :modi :command_shift }
    ;; command + shift + h
    :tab_back { :key :j :modi :command_shift }
    ;; command + shift + t
    :tab_forward { :key :k :modi :command_shift }
    ;; command + shift + l
    :password { :key :p :modi :command_option }

    :left { :key :h :modi { :mandatory :right_control :optional :any } }
    :down { :key :j :modi { :mandatory :right_control :optional :any } }
    :up { :key :k :modi { :mandatory :right_control :optional :any } }
    :right { :key :l :modi { :mandatory :right_control :optional :any } }
  }

  :tos {
    :arc_drawer_left { :key :semicolon :modi :left_command }
    :arc_history_back { :key :hyphen :modi :left_command }
    :arc_history_forward { :key :equal_sign :modi :left_command }
    :arc_open { :key :k :modi :left_command }
    :arc_open_undo { :key :k :modi :command_shift }
    :arc_split { :key :close_bracket :modi :control_shift }
    :arc_split_back { :key :open_bracket :modi :control_shift }
    :arc_split_forward { :key :open_bracket :modi :control_shift }
    :arc_split_close { :key :w :modi :left_command }
    :arc_tab_back { :key :hyphen :modi :command_shift }
    :arc_tab_forward { :key :equal_sign :modi :command_shift }

    :chrome_drawer_left { :key :semicolon :modi :left_command }
    :chrome_history_back { :key :left_arrow :modi :left_command }
    :chrome_history_forward { :key :right_arrow :modi :left_command }
    :chrome_open { :key :d :modi :left_command }
    :chrome_open_undo { :key :k :modi :command_shift }
    :chrome_split { :key :f9 :modi :left_command }
    :chrome_split_back { :key :open_bracket :modi :control_shift }
    :chrome_split_forward { :key :open_bracket :modi :control_shift }
    :chrome_split_close { :key :w :modi :left_command }
    :chrome_tab_back { :key :hyphen :modi :command_shift }
    :chrome_tab_forward { :key :equal_sign :modi :command_shift }
    :chrome_password { :key :a :modi :command_shift }

    :messages_tab_back { :key :hyphen :modi :command_shift }
    :messages_tab_forward { :key :equal_sign :modi :command_shift }

    :notion_drawer_left { :key :backslash :modi :left_command }
    :notion_history_back { :key :hyphen :modi :left_command }
    :notion_history_forward { :key :equal_sign :modi :left_command }
    :notion_tab_back { :key :hyphen :modi :command_shift }
    :notion_tab_forward { :key :equal_sign :modi :command_shift }

    :slack_drawer_left { :key :h :modi :command_shift }
    :slack_open { :key :k :modi :left_command }
    :slack_history_back { :key :hyphen :modi :left_command }
    :slack_history_forward { :key :equal_sign :modi :left_command }
    :slack_tab_back { :key :hyphen :modi :command_shift }
    :slack_tab_forward { :key :equal_sign :modi :command_shift }

    :telegram_open { :key :v :modi :left_command }

    :vivaldi_drawer_left { :key :semicolon :modi :left_command }
    :vivaldi_history_back { :key :left_arrow :modi :left_command }
    :vivaldi_history_forward { :key :right_arrow :modi :left_command }
    :vivaldi_open { :key :d :modi :left_command }
    :vivaldi_open_undo { :key :k :modi :command_shift }
    :vivaldi_split { :key :f9 :modi :left_command }
    :vivaldi_split_back { :key :open_bracket :modi :control_shift }
    :vivaldi_split_forward { :key :open_bracket :modi :control_shift }
    :vivaldi_split_close { :key :w :modi :left_command }
    :vivaldi_tab_back { :key :hyphen :modi :command_shift }
    :vivaldi_tab_forward { :key :equal_sign :modi :command_shift }
    :vivaldi_password { :key :a :modi :command_shift }

    :vscode_drawer_left { :key :n :modi :left_command }
    :vscode_history_back { :key :semicolon :modi :left_command }
    :vscode_history_forward { :key :semicolon :modi :control_shift }
    :vscode_open_undo { :key :k :modi :command_shift }
    :vscode_split { :key :backslash :modi :left_command }
    :vscode_split_back { :key :open_bracket :modi :control_shift }
    :vscode_split_forward { :key :open_bracket :modi :control_shift }
    :vscode_split_close { :key :comma :modi :command_option_control }
    :vscode_tab_back { :key :hyphen :modi :command_shift }
    :vscode_tab_forward { :key :equal_sign :modi :command_shift }

    :zoom_drawer_left { :key :j :modi :command_shift }
  }

  :main
  ;; [<from> <to>] or
  ;; [<from> <to> <conditions>] or
  ;; [<from> <to> <conditions> <other options>]
  ;; <from> can be keywords defined in froms or keycodes without `{:not-from true}`
  ;; <to> can be keywords defined in tos, keycodes without `{:not-to true}`, string (shell script)
  ;; <conditions> can be keywords defined in layers, devices, applications
  ;; <other options> {:other {:parameters {:to_delayed_action_delay_milliseconds 100 :basic.to_if_alone_timeout_milliseconds 500 :basic.to_if_held_down_threshold_milliseconds 250}} }
  [
    {:des "caps to ctrl/esc" :rules [[{:key :caps_lock :modi { :optional :any }} { :key :right_control :lazy true } nil { :alone { :key :escape }}]]}
    {:des "arc open" :rules [[:open :arc_open :arc]]}
    {:des "arc drawer_left" :rules [[:drawer_left :arc_drawer_left :arc]]}
    {:des "arc history_back" :rules [[:history_back :arc_history_back :arc]]}
    {:des "arc history_forward" :rules [[:history_forward :arc_history_forward :arc]]}
    {:des "arc open" :rules [[:open :arc_open :arc]]}
    {:des "arc open_undo" :rules [[:open_undo :arc_open_undo :arc]]}
    {:des "arc split" :rules [[:split :arc_split :arc]]}
    {:des "arc split_back" :rules [[:split_back :arc_split_back :arc]]}
    {:des "arc split_forward" :rules [[:split_forward :arc_split_forward :arc]]}
    {:des "arc split_close" :rules [[:split_close :arc_split_close :arc]]}
    {:des "arc tab_back" :rules [[:tab_back :arc_tab_back :arc]]}
    {:des "arc tab_forward" :rules [[:tab_forward :arc_tab_forward :arc]]}
    {:des "chrome open" :rules [[:open :chrome_open :chrome]]}
    {:des "chrome drawer_left" :rules [[:drawer_left :chrome_drawer_left :chrome]]}
    {:des "chrome history_back" :rules [[:history_back :chrome_history_back :chrome]]}
    {:des "chrome history_forward" :rules [[:history_forward :chrome_history_forward :chrome]]}
    {:des "chrome open" :rules [[:open :chrome_open :chrome]]}
    {:des "chrome open_undo" :rules [[:open_undo :chrome_open_undo :chrome]]}
    {:des "chrome split" :rules [[:split :chrome_split :chrome]]}
    {:des "chrome split_back" :rules [[:split_back :chrome_split_back :chrome]]}
    {:des "chrome split_forward" :rules [[:split_forward :chrome_split_forward :chrome]]}
    {:des "chrome split_close" :rules [[:split_close :chrome_split_close :chrome]]}
    {:des "chrome tab_back" :rules [[:tab_back :chrome_tab_back :chrome]]}
    {:des "chrome tab_forward" :rules [[:tab_forward :chrome_tab_forward :chrome]]}
    {:des "chrome password" :rules [[:password :chrome_password :chrome]]}
    {:des "messages tab_back" :rules [[:tab_back :messages_tab_back :messages]]}
    {:des "messages tab_forward" :rules [[:tab_forward :messages_tab_forward :messages]]}
    {:des "notion drawer_left" :rules [[:drawer_left :arc_drawer_left :notion]]}
    {:des "notion history_back" :rules [[:history_back :notion_history_back :notion]]}
    {:des "notion history_forward" :rules [[:history_forward :notion_history_forward :notion]]}
    {:des "notion tab_back" :rules [[:tab_back :notion_tab_back :notion]]}
    {:des "notion tab_forward" :rules [[:tab_forward :notion_tab_forward :notion]]}
    {:des "slack drawer_left" :rules [[:drawer_left :slack_drawer_left :slack]]}
    {:des "slack open" :rules [[:open :slack_open :slack]]}
    {:des "slack history_back" :rules [[:history_back :slack_history_back :slack]]}
    {:des "slack history_forward" :rules [[:history_forward :slack_history_forward :slack]]}
    {:des "slack tab_back" :rules [[:tab_back :slack_tab_back :slack]]}
    {:des "slack tab_forward" :rules [[:tab_forward :slack_tab_forward :slack]]}
    {:des "telegram open" :rules [[:open :telegram_open :telegram]]}
    {:des "vivaldi open" :rules [[:open :vivaldi_open :vivaldi]]}
    {:des "vivaldi drawer_left" :rules [[:drawer_left :vivaldi_drawer_left :vivaldi]]}
    {:des "vivaldi history_back" :rules [[:history_back :vivaldi_history_back :vivaldi]]}
    {:des "vivaldi history_forward" :rules [[:history_forward :vivaldi_history_forward :vivaldi]]}
    {:des "vivaldi open" :rules [[:open :vivaldi_open :vivaldi]]}
    {:des "vivaldi open_undo" :rules [[:open_undo :vivaldi_open_undo :vivaldi]]}
    {:des "vivaldi split" :rules [[:split :vivaldi_split :vivaldi]]}
    {:des "vivaldi split_back" :rules [[:split_back :vivaldi_split_back :vivaldi]]}
    {:des "vivaldi split_forward" :rules [[:split_forward :vivaldi_split_forward :vivaldi]]}
    {:des "vivaldi split_close" :rules [[:split_close :vivaldi_split_close :vivaldi]]}
    {:des "vivaldi tab_back" :rules [[:tab_back :vivaldi_tab_back :vivaldi]]}
    {:des "vivaldi tab_forward" :rules [[:tab_forward :vivaldi_tab_forward :vivaldi]]}
    {:des "vivaldi password" :rules [[:password :vivaldi_password :vivaldi]]}
    ;; {:des "vscode drawer_left" :rules [[:drawer_left :vscode_drawer_left :vscode]]}
    ;; {:des "vscode history_back" :rules [[:history_back :vscode_history_back :vscode]]}
    ;; {:des "vscode history_forward" :rules [[:history_forward :vscode_history_forward :vscode]]}
    ;; {:des "vscode open_undo" :rules [[:open_undo :vscode_open_undo :vscode]]}
    ;; {:des "vscode split" :rules [[:split :vscode_split :vscode]]}
    ;; {:des "vscode split_back" :rules [[:split_back :vscode_split_back :vscode]]}
    ;; {:des "vscode split_forward" :rules [[:split_forward :vscode_split_forward :vscode]]}
    ;; {:des "vscode split_close" :rules [[:split_close :vscode_split_close :vscode]]}
    ;; {:des "vscode tab_back" :rules [[:tab_back :vscode_tab_back :vscode]]}
    ;; {:des "vscode tab_forward" :rules [[:tab_forward :vscode_tab_forward :vscode]]}
    {:des "zoom drawer_left" :rules [[:drawer_left :zoom_drawer_left :zoom]]}

    {:des "movement left" :rules [[:left :left_arrow]]}
    {:des "movement down" :rules [[:down :down_arrow]]}
    {:des "movement up" :rules [[:up :up_arrow]]}
    {:des "movement right" :rules [[:right :right_arrow]]}
  ]
}
